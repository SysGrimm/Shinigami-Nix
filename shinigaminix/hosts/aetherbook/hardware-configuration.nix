# This is a placeholder hardware-configuration.nix file for the Framework 13
# You will need to replace this with the actual hardware configuration 
# generated by nixos-generate-config when installing NixOS

{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  # NOTE: This is a placeholder configuration for Framework 13
  # Replace with actual hardware configuration from nixos-generate-config

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "thunderbolt" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  # Placeholder filesystem configuration - replace with actual partitions
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/PLACEHOLDER-ROOT-UUID";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/PLACEHOLDER-BOOT-UUID";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  # Placeholder swap configuration
  swapDevices =
    [ { device = "/dev/disk/by-uuid/PLACEHOLDER-SWAP-UUID"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp166s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  # Framework 13 specific hardware configuration
  # These settings are optimized for the Framework 13 laptop

  # Hardware acceleration
  hardware.opengl = {
    enable = true;
    driSupport = true;
    driSupport32Bit = true;
  };

  # Power management
  powerManagement.enable = true;
  services.power-profiles-daemon.enable = false; # We use TLP instead
  services.tlp.enable = true;

  # Firmware updates
  services.fwupd.enable = true;

  # Audio
  sound.enable = true;
  hardware.pulseaudio.enable = false;
  security.rtkit.enable = true;
  services.pipewire = {
    enable = true;
    alsa.enable = true;
    alsa.support32Bit = true;
    pulse.enable = true;
  };

  # Bluetooth
  hardware.bluetooth = {
    enable = true;
    powerOnBoot = true;
  };

  # Touchpad
  services.libinput = {
    enable = true;
    touchpad = {
      naturalScrolling = true;
      tapping = true;
    };
  };

  # Wireless
  networking.wireless.iwd.enable = true;
  networking.networkmanager.wifi.backend = "iwd";
}
